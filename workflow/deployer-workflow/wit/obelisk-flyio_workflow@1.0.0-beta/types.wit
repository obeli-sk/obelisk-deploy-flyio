package obelisk-flyio:workflow@1.0.0-beta;

interface types {

    // Same syntax as in obelisk.toml - "key" or "key=val"
    type env-var = string;

    record obelisk-config {
        activity-wasm-list: option<list<activity-wasm>>,
        workflow-list: option<list<workflow>>,
        webhook-endpoint-list: option<list<webhok-endpoint>>,
    }

    record activity-wasm {
        name: string,
        location-oci: string,
        env-vars: option<list<env-var>>,
        lock-expiry-seconds: option<u32>,
    }

    record workflow {
        name: string,
        location-oci: string,
    }

    record webhok-endpoint {
        name: string,
        location-oci: string,
        routes: list<route>,
        env-vars: option<list<env-var>>,
    }

    record route {
        methods: list<string>,
        path: string,
    }

    variant app-init-modify-error {
        /// Cannot check the app name, no cleanup is required.
        app-name-get-error,
        /// Name conflict, no cleanup is required.
        app-name-conflict,
        /// Unknown error while creating the app. Since this can be a timeout, the cleanup should be performed.
        app-create-error(string),
        /// Cannot allocate an IP address
        ip-allocate-error(string),
        /// Cannot create the volume
        volume-create-error(string),
        /// Cannot start the temporary VM
        temp-vm-error(string),
        /// Cannot place files on the volume.
        volume-write-error(string),
        /// Error running `obelisk server verify --ignore-missing-env-vars`
        verify-error(string),
        /// Waiting for secrets was interrupted by deleting the app.
        app-deleted,
        /// Cannot start the final VM
        final-vm-error(string),
        health-check-failed,
        /// Trap (panic) during execution
        execution-failed,
    }

    record app-cleanup-failed {
        /// Reason of the original failure.
        modify-error: app-init-modify-error,
        /// Reason why cleanup failed.
        cleanup-error: string,
    }

    variant app-init-error {
        cleanup-not-required,
        /// App init failed, cleanup was successful.
        cleanup-ok,
        /// App init failed, cleanup failed.
        /// The associated value contains the reason of failure, if available.
        cleanup-failed(app-cleanup-failed),

        execution-failed,
    }
}
